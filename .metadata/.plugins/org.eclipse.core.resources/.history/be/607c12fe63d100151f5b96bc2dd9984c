/*
 *
 *  Created on: Aug 5, 2015
 *      Author: Deepak K. Gupta
 *  
 */

#include <atop/TopologyOptimization/projection.h>
#include <atop/fem/define_mesh.h>
#include <math.h>
#include <deal.II/dofs/dof_handler.h>
#include <deal.II/grid/tria_accessor.h>
#include <deal.II/grid/tria_iterator.h>

using namespace atop;

Projection::Projection(
		std::string type,
		double r,
		double g){
	projection_type = type;
	radius = r;
	gamma = g;
}

Projection::Projection(
		std::string type,
		double r){
	projection_type = type;
	radius = r;
	gamma = 1.0;
}

Projection::~Projection(){

}

Projection::Projection(
		std::string type,
		DefineMesh<2> &mesh,
		double r){
	projection_type = type;

	//calculating element size assuming it is a square element for now
	typename Triangulation<2>::active_cell_iterator cell = mesh.triangulation->begin_active();
	double elem_len = sqrt(cell->measure());

	radius = r * elem_len/2;	//creating physical size of radius
}
