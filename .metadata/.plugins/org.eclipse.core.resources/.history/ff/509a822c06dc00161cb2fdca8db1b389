/*
 *
 *  Created on: Jan 10, 2017
 *      Author: Deepak K. Gupta
 *  
 */

#ifndef INCLUDE_ATOP_OPTIMIZER_IPOPT_INTERFACE_HPP_
#define INCLUDE_ATOP_OPTIMIZER_IPOPT_INTERFACE_HPP_

#include <coin/IpTNLP.hpp>
#include <atop/TopologyOptimization/optimizedesign.h>

using namespace Ipopt;
namespace atop{
class IpOpt_IF : public TNLP{
public:
	IpOpt_IF();

	//Default destructor
	virtual ~IpOpt_IF();

	private:
	  /**@name Methods to block default compiler methods.
	   * The compiler automatically generates the following three methods.
	   *  Since the default compiler implementation is generally not what
	   *  you want (for all but the most simple classes), we usually
	   *  put the declarations of these methods in the private section
	   *  and never implement them. This prevents the compiler from
	   *  implementing an incorrect "default" behavior without us
	   *  knowing. (See Scott Meyers book, "Effective C++")
	   *
	   */
	  //@{
	  //  HS071_NLP();
	  IpOpt_IF(const IpOpt_IF&);
	  IpOpt_IF& operator=(const IpOpt_IF&);
	  //@}

	  //Optimizedesign<2> *opt_design2D;
	  std::vector<double> grad_obj, grad_cons;

};
}




#endif /* INCLUDE_ATOP_OPTIMIZER_IPOPT_INTERFACE_HPP_ */
